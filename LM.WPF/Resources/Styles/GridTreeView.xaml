<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:con="clr-namespace:LM.WPF.Converter">
    <con:BoolToVisibilityConverter x:Key="VisibilityCon"/>
    <Style x:Key="treeviewtoggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="5" Width="16">
                        <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="#66645e" Stroke="#66645e">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="DefaultTreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="IsExpanded" Value="False"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="ItemsSource" Value="{Binding Children,Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <con:IndentConverter  x:Key="indentConverter"/>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Name="itemBackground" Background="{TemplateBinding Background}"  
                    BorderBrush="{TemplateBinding BorderBrush}"  
                    BorderThickness="{TemplateBinding BorderThickness}"  
                    Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent">
                                <Border>
                                    <Grid x:Name="ItemRoot" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1.2*" SharedSizeGroup="keycol1"/>
                                            <ColumnDefinition Width="1*" />
                                            <ColumnDefinition Width="0.6*" />
                                        </Grid.ColumnDefinitions>
                                        <Border Padding="{Binding Converter={StaticResource indentConverter},RelativeSource={RelativeSource TemplatedParent}}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="16" />
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="1" Foreground="White" VerticalAlignment="Center" Text="{Binding Name}"/>
                                                <ToggleButton Style="{StaticResource treeviewtoggle}" x:Name="Expander" HorizontalAlignment="Left"  ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Border>
                                        <Border Grid.Column="2" BorderBrush="Silver" BorderThickness="0">
                                            <TextBlock x:Name="type" Text="{Binding Type}" Foreground="White"  Margin="3 0" VerticalAlignment="Center" HorizontalAlignment="Left"
             Visibility="{Binding IsContainer,Converter={StaticResource VisibilityCon}}"/>
                                        </Border>
                                        <Border BorderBrush="Silver" BorderThickness="1,0,1,0" Grid.Column="1">
                                            <TextBox Grid.Column="1"   VerticalContentAlignment="Center" Text="{Binding Value}" 
            Visibility="{Binding IsContainer,Converter={StaticResource VisibilityCon}}">
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox">
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="BorderBrush" Value="Gray"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                                <Setter Property="Background" Value="#F0F0F0"/>
                                                                <Setter Property="CaretBrush" Value="Black"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </Border>
                                    </Grid>
                                </Border>

                            </Grid>
                        </Border>

                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="itemBackground" Value="#80E5F6F5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition SourceName="itemBackground" Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#80E5F6F5" TargetName="itemBackground"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTreeView" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#BBB"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="False"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultTreeViewItem}"></Setter>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Margin="0"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <ScrollViewer  CanContentScroll="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Background="{TemplateBinding Panel.Background}" Padding="{TemplateBinding Control.Padding}" Name="_tv_scrollviewer_" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False">
                        <Border BorderBrush="Silver" BorderThickness="1">
                            <Grid TextBlock.Foreground="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" BorderBrush="Silver" BorderThickness="0,0,0,1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1.2*" SharedSizeGroup="keycol1" />
                                            <ColumnDefinition Width="1*"  />
                                            <ColumnDefinition Width="0.6*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="Margin" Value="3 0"/>
                                            </Style>
                                        </Grid.Resources>
                                        <Border Grid.Column="0">
                                            <TextBlock Text="NAME"/>
                                        </Border>
                                        <Border Grid.Column="1">
                                            <TextBlock Text="VALUE"/>
                                        </Border>
                                        <Border Grid.Column="2">
                                            <TextBlock  Text="TYPE"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <ItemsPresenter Grid.Row="1" Grid.ColumnSpan="2"/>
                            </Grid>
                        </Border>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>